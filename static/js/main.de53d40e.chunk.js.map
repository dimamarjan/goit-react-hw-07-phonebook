{"version":3,"sources":["redux/slices/contacts.js","redux/slices/filter.js","redux/store/store.js","components/ContactForm/ContactForm.style.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.style.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.style.jsx","views/ContactListView.style.jsx","views/ContactListView.jsx","components/ContactList/ContactList.jsx","App.js","reportWebVitals.js","index.js"],"names":["getContactsData","createAsyncThunk","a","axios","get","resp","data","addContactData","contact","post","delContactData","id","delete","itemsSlice","createSlice","name","initialState","items","status","err","extraReducers","fulfilled","state","action","payload","pending","_","rejected","filter","filterSlice","reducers","filterUpdate","actions","rootReducer","contacts","store","configureStore","reducer","devTools","process","FormPhoneBook","styled","form","LabelForm","label","LabelText","span","InputForm","input","SubmitButton","button","ContactForm","dispatch","useDispatch","contactsArr","useSelector","useState","newContactsArr","setNewContactsArr","contactForm","nameContact","numberContact","target","contactItem","toLowerCase","number","reset","useEffect","onSubmit","e","preventDefault","elements","value","length","namesArr","map","i","numberArr","includes","newContact","type","pattern","title","required","LabelContacts","LabelContactsText","AccentText","InputContacts","Filter","onChange","ContactListSection","ul","ContactListItem","li","ContactItemText","DelContactButton","ContactListView","onDelete","onClick","ContactList","filterData","filteredArr","setFilteredArr","dataToDelete","setDataToDelete","showFilteredList","setShowFilteredList","showList","setShowList","onDeleteHeandler","toString","indexOf","parseInt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de53d40e.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getContactsData = createAsyncThunk(\"contacts/getContactList\",\n    async () => {\n        const resp = await axios.get(\"http://localhost:3001/contacts\");\n        return resp.data;\n    }\n)\n\nexport const addContactData = createAsyncThunk(\"contacts/addContact\",\n    async (contact) => {\n        const resp = await axios.post(\"http://localhost:3001/contacts\", contact);\n        return resp.data;\n    }\n)\n\nexport const delContactData = createAsyncThunk(\"contacts/delContact\",\n    async (id) => {\n        await axios.delete(`http://localhost:3001/contacts/${id}`);\n        return id\n    }\n)\n\n\n\nconst itemsSlice = createSlice({\n    name: 'contacts',\n    initialState: {\n        items: [],\n        status: null,\n        err: null,\n    },\n    extraReducers: {\n        [getContactsData.fulfilled]: (state, action) => {\n            state.items = action.payload;\n            state.status = null;\n            state.err = null;\n        },\n        [getContactsData.pending]: (state, _) => {\n            state.status = \"pending\";\n        },\n        [getContactsData.rejected]: (state, _) => {\n            state.status = null;\n            state.err = \"ERROR\";\n        },\n\n        [addContactData.fulfilled]: (state, action) => {\n            state.items = [...state.items, action.payload];\n            state.status = null;\n            state.err = null;\n        },\n        [addContactData.pending]: (state, _) => {\n            state.status = \"pending\";\n        },\n        [addContactData.rejected]: (state, _) => {\n            state.status = null;\n            state.err = \"ERROR\";\n        },\n\n        [delContactData.fulfilled]: (state, action) => {\n            state.items = state.items.filter(contact => contact.id !== action.payload);\n            state.status = null;\n            state.err = null;\n        },\n        [delContactData.pending]: (state, _) => {\n            state.status = \"pending\";\n        },\n        [delContactData.rejected]: (state, _) => {\n            state.status = null;\n            state.err = \"ERROR\";\n        }\n    }\n});\n\nexport default itemsSlice.reducer;","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst filterSlice = createSlice({\n    name: 'filter',\n    initialState: \"\",\n    reducers: {\n        filterUpdate: (_, action) => action.payload\n    },\n});\n\nexport const { filterUpdate } = filterSlice.actions;\nexport default filterSlice.reducer;","import { configureStore } from '@reduxjs/toolkit'\r\nimport contacts from 'redux/slices/contacts'\r\nimport filter from 'redux/slices/filter'\r\n\r\nconst rootReducer = {\r\n    contacts,\r\n    filter\r\n}\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    devTools: process.env.NODE_ENV !== \"production\",\r\n})\r\n\r\nexport default store;","import styled from \"@emotion/styled\";\r\n\r\nexport const FormPhoneBook = styled.form`\r\ndisplay: block;\r\nwidth: 320px;\r\nborder: 2px solid black;\r\npadding: 10px;\r\n\r\nmargin-left: 5px;\r\n`;\r\n\r\nexport const LabelForm = styled.label`\r\ndisplay: flex;\r\nflex-direction: column;\r\nfont-size: 20px;\r\n`;\r\n\r\nexport const LabelText = styled.span`\r\nmargin-bottom: 5px;\r\n`;\r\n\r\nexport const InputForm = styled.input`\r\nwidth: 150px;\r\nmargin-bottom: 20px;\r\n`;\r\n\r\nexport const SubmitButton = styled.button``;\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport {\r\n    FormPhoneBook,\r\n    LabelForm,\r\n    LabelText,\r\n    InputForm,\r\n    SubmitButton\r\n} from 'components/ContactForm/ContactForm.style'\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport { addContactData } from 'redux/slices/contacts';\r\n\r\n\r\n\r\n\r\n\r\nexport function ContactForm() {\r\n    const dispatch = useDispatch();\r\n    const contactsArr = useSelector(store => store.contacts.items);\r\n    const [newContactsArr, setNewContactsArr] = useState();\r\n\r\n\r\n    const contactForm = (nameContact, numberContact, {target} ) => {\r\n        const contactItem = {\r\n            name: nameContact.toLowerCase(),\r\n            number: numberContact\r\n        };\r\n        target.reset();\r\n        return contactItem;\r\n    }\r\n\r\n   \r\n    const onSubmitHandle = (e) => {\r\n        e.preventDefault();\r\n        const name = e.target.elements.name.value;\r\n        const number = e.target.elements.number.value;\r\n        if (contactsArr.length !== 0) {\r\n            const namesArr = contactsArr.map(i => i.name);\r\n            const numberArr = contactsArr.map(i => i.number);\r\n            if (namesArr.includes(name.toLowerCase()) || numberArr.includes(number)) {\r\n                e.target.elements.name.value = \"\";\r\n                e.target.elements.number.value = \"\";\r\n                return;\r\n            } else {\r\n                const newContact = contactForm(name, number, e)\r\n                setNewContactsArr(newContact);\r\n            };\r\n        } else {\r\n            const newContact = contactForm(name, number, e)\r\n            setNewContactsArr(newContact);\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (newContactsArr) {\r\n            dispatch(addContactData(newContactsArr));\r\n        }\r\n    },[dispatch, newContactsArr])\r\n\r\n    return (\r\n        <div>\r\n            <FormPhoneBook onSubmit={onSubmitHandle}>\r\n                <LabelForm>\r\n                    <LabelText>Name</LabelText>\r\n                    <InputForm\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required>\r\n                    </InputForm>\r\n                </LabelForm>\r\n                <LabelForm>\r\n                    <LabelText>Number</LabelText>\r\n                    <InputForm\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required>\r\n                    </InputForm>\r\n                </LabelForm>\r\n                <SubmitButton>Add contact</SubmitButton>\r\n            </FormPhoneBook>\r\n        </div>\r\n    );\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const LabelContacts = styled.label`\r\ndisplay: flex;\r\nflex-direction: column;\r\nfont-size: 20px;\r\nmargin-left: 15px;\r\n`;\r\n\r\nexport const LabelContactsText = styled.span`\r\nmargin-bottom: 10px;\r\n`;\r\n\r\nexport const AccentText = styled.span`\r\ntext-decoration: underline;\r\nfont-weight: 600;\r\n`;\r\n\r\nexport const InputContacts = styled.input`\r\nwidth: 150px;\r\n`;","import {\r\n    LabelContacts,\r\n    LabelContactsText,\r\n    InputContacts,\r\n    AccentText\r\n} from \"components/Filter/Filter.style\"\r\nimport { useDispatch } from 'react-redux';\r\nimport { filterUpdate } from 'redux/slices/filter';\r\n\r\n\r\n\r\nexport function Filter() {\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const onChangeHandle = ({ target }) => {\r\n        dispatch(filterUpdate(target.value))\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <LabelContacts>\r\n                <LabelContactsText>Find contacts by <AccentText>name</AccentText> or <AccentText>number</AccentText></LabelContactsText>\r\n                <InputContacts\r\n                    name=\"filter\"\r\n                    onChange={onChangeHandle} />\r\n            </LabelContacts>\r\n        </div>\r\n    );\r\n}\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ContactListSection = styled.ul`\r\nmargin-left: 15px;\r\n`;\r\n\r\nexport const ContactListItem = styled.li`\r\ntext-transform: capitalize;\r\n:not(:last-child){\r\n    margin-bottom: 15px;\r\n}\r\n`;\r\n\r\nexport const ContactItemText = styled.span``;\r\n\r\nexport const DelContactButton = styled.button`\r\nmargin-left: 10px;\r\n`;","import styled from \"@emotion/styled\";\r\n\r\nexport const ContactListItem = styled.li`\r\ntext-transform: capitalize;\r\n:not(:last-child){\r\n    margin-bottom: 15px;\r\n}\r\n`;\r\n\r\nexport const ContactItemText = styled.span``;\r\n\r\nexport const DelContactButton = styled.button`\r\nmargin-left: 10px;\r\n`;","import {\r\n    ContactListItem,\r\n    ContactItemText,\r\n    DelContactButton\r\n} from 'views/ContactListView.style'\r\n\r\nexport function ContactListView( {data, onDelete}) {\r\n    const { id, name, number } = data;\r\n    \r\n    return (\r\n        <ContactListItem >\r\n            <ContactItemText>{name}: {number}</ContactItemText>\r\n            <DelContactButton\r\n                id={id}\r\n                onClick={onDelete}\r\n            >\r\n                Delete\r\n            </DelContactButton>\r\n        </ContactListItem>\r\n    )\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getContactsData, delContactData  } from \"redux/slices/contacts\";\r\n\r\nimport { ContactListSection } from 'components/ContactList/ContactList.style'\r\nimport { ContactListView } from 'views/ContactListView';\r\n\r\nexport function ContactList() {\r\n    const store = useSelector(store => store.contacts.items);\r\n    const filterData = useSelector(store => store.filter);\r\n    const dispatch = useDispatch();\r\n    const [filteredArr, setFilteredArr] = useState([]);\r\n    const [dataToDelete, setDataToDelete] = useState();\r\n\r\n    const [showFilteredList, setShowFilteredList] = useState(false);\r\n    const [showList, setShowList] = useState(false);\r\n\r\n    const onDeleteHeandler = ({ target }) => {\r\n       setDataToDelete(target.id);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (filterData) {\r\n            if (toString(filterData)) {\r\n                setFilteredArr([\r\n                    ...store.filter((contact => {\r\n                        return contact.name.indexOf(filterData.toLowerCase()) > -1;\r\n                    }))\r\n                ])\r\n            };\r\n            if (parseInt(filterData)) {\r\n                setFilteredArr([\r\n                    ...store.filter((contact => {\r\n                        return contact.number.indexOf(filterData) > -1;\r\n                    }))\r\n                ])\r\n            };\r\n        } else {\r\n            setFilteredArr([]);\r\n        }\r\n    }, [filterData, store])\r\n \r\n\r\n    useEffect(() => {\r\n        if (dataToDelete) {\r\n            dispatch(delContactData(dataToDelete));\r\n        }\r\n    }, [dataToDelete, dispatch])\r\n\r\n    useEffect(() => {\r\n        dispatch(getContactsData())\r\n    }, [dispatch, store])\r\n\r\n    useEffect(() => {\r\n        if (filteredArr.length !== 0) {\r\n            setShowList(false);\r\n            setShowFilteredList(true);\r\n        } else {\r\n            setShowFilteredList(false);\r\n            setShowList(true);\r\n        }\r\n    }, [filteredArr.length])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ContactListSection>\r\n                {showList && store.map((contactItem) => (\r\n                    <ContactListView key={contactItem.id} data={contactItem} onDelete={onDeleteHeandler} />\r\n                ))}\r\n                {showFilteredList && filteredArr.map((contactItem) => (\r\n                    <ContactListView key={contactItem.id} data={contactItem} onDelete={onDeleteHeandler} />\r\n                ))}\r\n            </ContactListSection>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { ContactList } from \"components/ContactList/ContactList\";\n\nfunction App() {\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\"\nimport store from \"redux/store/store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}